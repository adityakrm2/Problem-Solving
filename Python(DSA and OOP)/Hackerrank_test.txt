def stringAnagram(dictionary, query):
    l=[]
    for i in query:
        count=0
        for j in dictionary:
            if sorted(i)==sorted(j):
                count+=1
        l.append(count)
    return l


2


def getMinCost(l1,l2):
    count=0
    l1.sort()
    l2.sort()
    for i in range(len(l1)):
        count+=abs(l1[i]-l2[i])
    return count
l1=[3,1,5]
l2=[3,5,7]
print(getMinCost(l1, l2))


3


#include <bits/stdc++.h>

using namespace std;

// Complete the solve function below.
void solve(double meal_cost, int tip_percent, int tax_percent) {
    int solution;
    float tip_percent1=tip_percent;
    float tax_percent1=tax_percent;
    solution=meal_cost+(tip_percent1/100*meal_cost)+(tax_percent1/100*meal_cost);
    cout<<solution;
}

int main()
{
    double meal_cost;
    cin >> meal_cost;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    int tip_percent;
    cin >> tip_percent;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    int tax_percent;
    cin >> tax_percent;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    solve(meal_cost, tip_percent, tax_percent);

    return 0;
}


