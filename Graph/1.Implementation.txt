//adjacent matrix
int adj[n+1][n+1]; 
    for (int i = 0; i < m; ++i) {
        int u,v;
        cin>>u>>v;

        adj[u][v]=1;
        adj[v][u]=1;
    }
	
//Adjacency matrix

#include <iostream>
#include<vector>
using namespace std;

int main()
{
    int n,m;  //nodes, edges
    cin>>n>>m;

    vector<int> adj[n+1]; //ARRAY of vectors, unlike vector of vectors, it has fixed no of vectors which it can contain
    for (int i = 0; i < m; ++i) {
        int u,v;
        cin>>u>>v;

        adj[u].push_back(v);
        adj[v].push_back(u); //omit this line for undirected graph
    }
    
}
//Weighted


    int n,m;
    cin>>n>>m;

    vector<pair<int,int>> adj[n+1]; 
    for (int i = 0; i < m; ++i) {
        int u,v,wt;
        cin>>u>>v>>wt;

        adj[u].push_back({v,wt});
        adj[v].push_back({u,wt});
    }


