#include <iostream>
#include <bits/stdc++.h>
using namespace std;


int main(){
    int arr[]{1,2,3,4,6,5};
    int arr1[]{4,5};
    
   int intersec[1000];
   int inter=0;

   int size= sizeof(arr)/sizeof(arr[0]);
   int size1= sizeof(arr1)/sizeof(arr1[0]);
int k=0;
   for(int i=0;i<size;i++){
       for(int j=0;j<size1;j++){
           
           if(arr[i]==arr1[j]){
               inter+=1;
               intersec[k]=arr[i];
               k+=1;
           }
       }
   }
   cout<<" Intersection is : "<<inter<<endl;
   for(int i=0; i<inter; i++){
       cout<<intersec[i]<<" ";
   }
    
return 0; 
}

2.
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int printUnion(int arr1[], int arr2[], int m, int n) 
{ 
    int i = 0, j = 0; 
    while (i < m && j < n) { 
        if (arr1[i] < arr2[j]) 
            cout << arr1[i++] << " "; 
  
        else if (arr2[j] < arr1[i]) 
            cout << arr2[j++] << " "; 
  
        else { 
            cout << arr2[j++] << " "; 
            i++; 
        } 
    } 
  
    /* Print remaining elements of the larger array */
    while (i < m) 
        cout << arr1[i++] << " "; 
  
    while (j < n) 
        cout << arr2[j++] << " "; 
} 
  
/* Driver program to test above function */
int main() 
{ 
    int arr1[] = { 1, 2, 4, 5, 6 }; 
    int arr2[] = { 2, 3, 5, 7 }; 
  
    int m = sizeof(arr1) / sizeof(arr1[0]); 
    int n = sizeof(arr2) / sizeof(arr2[0]); 
  
    // Function calling 
    printUnion(arr1, arr2, m, n); 
  
    return 0; 
} 